
//---------------------------------------------------------------------------
#ifndef TabelaAnalisadorSintaticoH
#define TabelaAnalisadorSintaticoH
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
// Tabela do Analisador Sintático
//---------------------------------------------------------------------------
class TabelaAnalisadorSintatico {
public:

//---------------------------------------------------------------------------
// Tabela de acao
//---------------------------------------------------------------------------
static int getAcao(int lin, int col) {
static int acao[][11] = {

/*-------------------------------------------------------------------------*
 *      TABELA DE ACAO DO INTERPRETADOR DA GRAMATICA                       *
 *-------------------------------------------------------------------------*
 *  E   !        'n         '      'l                           '.a        *
 *  S   !         t          (      o    '{                't     t        *
 *  T   !         e          te_    c     te_               e     r        *
 *  A   !         r          par    a     cod               r     i        *
 *  DO  !  ';'    m'  '->'   )'     l'    }'   '|'   '#'    m'    b'   '$' *
 *------!  (0)   (1)   (2)   (3)   (4)   (5)   (6)   (7)   (8)   (9)  (10) *
 *-------------------------------------------------------------------------*/
/*  0 */  {   1, 2004,    3,    3,    3,    1,    1,    1,    1,    1,    2},
/*  1 */  {  -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  1000},
/*  2 */  {2005,    4,    4,    4,    4,    4,    4,    4,    4,    4,    2},
/*  3 */  {1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003},
/*  4 */  {1006, 1006, 1006, 2007, 1006, 1006, 1006, 1006, 1006, 1006, 1006},
/*  5 */  {   1, 2004,    3,    3,    3,    1,    1,    1,    1,    1, 1001},
/*  6 */  {1008, 1008, 1008, 1008, 2010, 1008, 1008, 1008, 1008, 1008, 1008},
/*  7 */  {1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005},
/*  8 */  {1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002},
/*  9 */  {   5,    5, 2011,    5,    5,    1,    5,    5,    5,    5,    2},
/* 10 */  {   9,    9,    9,    9,    9, 2012,    9,    9,    9,    9,    2},
/* 11 */  {1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010},
/* 12 */  {1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007},
/* 13 */  {1004, 1004, 1004, 1004, 1004, 1004, 2015, 1004, 1004, 1004, 1004},
/* 14 */  {   8, 2021,    1,    6,    1, 2017,    1, 2019, 2022,    7,    2},
/* 15 */  {1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010},
/* 16 */  {1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012},
/* 17 */  {1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009},
/* 18 */  {1013, 2021, 1013, 1013, 1013, 1013, 1013, 1013, 2022, 1013, 1013},
/* 19 */  {1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010},
/* 20 */  {1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010},
/* 21 */  {1006, 1006, 1006, 2007, 1006, 1006, 1006, 1006, 1006, 1006, 1006},
/* 22 */  {1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 2029, 1020},
/* 23 */  {   8, 2021,    1,    6,    1, 2017,    1, 2019, 2022,    7,    2},
/* 24 */  {1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010},
/* 25 */  {1014, 1014, 1014, 1014, 1014, 2017, 1014, 1014, 1014, 1014, 1014},
/* 26 */  {1016, 1016, 1016, 1016, 1016, 2017, 1016, 1016, 1016, 1016, 1016},
/* 27 */  {1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017},
/* 28 */  {1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018},
/* 29 */  {1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019},
/* 30 */  {1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011},
/* 31 */  {1015, 1015, 1015, 1015, 1015, 2017, 1015, 1015, 1015, 1015, 1015}  };
return acao[lin][col];
}

//---------------------------------------------------------------------------
// Nao terminais usados na gramatica
//---------------------------------------------------------------------------
#define ACEITA       0
#define Espec        1
#define Lista_prod   2
#define Prod         3
#define Param_opc    4
#define Local_opc    5
#define Lista_dir    6
#define Codigo_opc   7
#define Parte_dir    8
#define Lista_simb   9
#define Simb        10
#define Atrib_opc   11

//---------------------------------------------------------------------------
// Tabela de goto
//---------------------------------------------------------------------------
short static getGoto(int lin, int col) {
static short vet_goto[21][3] =  {
/*-----------------------------*
 *     TABELA DE GOTO          *
 *-----------------------------*
 * EST   NAO_TERM.   NOVO EST. *
 *-----------------------------*/
   {0,   Espec     ,  1},
   {0,   Lista_prod,  2},
   {0,   Prod      ,  3},
   {4,   Param_opc ,  6},
   {5,   Prod      ,  8},
   {6,   Local_opc ,  9},
   {11,   Lista_dir , 13},
   {11,   Codigo_opc, 14},
   {14,   Parte_dir , 16},
   {14,   Lista_simb, 18},
   {14,   Simb      , 20},
   {15,   Codigo_opc, 23},
   {18,   Simb      , 24},
   {19,   Codigo_opc, 25},
   {20,   Codigo_opc, 26},
   {21,   Param_opc , 27},
   {22,   Atrib_opc , 28},
   {23,   Parte_dir , 30},
   {23,   Lista_simb, 18},
   {23,   Simb      , 20},
   {24,   Codigo_opc, 31}  };
return vet_goto[lin][col] ;
}

//---------------------------------------------------------------------------
// Número de linhas da tabela de goto
//---------------------------------------------------------------------------
static short getNumeroLinhasTabelaGoto() {
 return 21;
}

//---------------------------------------------------------------------------
//   numero de simbolos a direita
//---------------------------------------------------------------------------
static int getNroDireita(int pos) {
static int nro_direita [20] =      {
/*-----------------------------*
 * producao   nro.de simbolos  *
 *	      a direita        *
 *-----------------------------*/
   /*  1 */        2,
   /*  2 */        3,
   /*  3 */        1,
   /*  4 */        5,
   /*  5 */        1,
   /*  6 */        0,
   /*  7 */        2,
   /*  8 */        0,
   /*  9 */        2,
   /* 10 */        0,
   /* 11 */        4,
   /* 12 */        2,
   /* 13 */        1,
   /* 14 */        2,
   /* 15 */        3,
   /* 16 */        2,
   /* 17 */        2,
   /* 18 */        2,
   /* 19 */        1,
   /* 20 */        0   };
return nro_direita[pos];
}


//---------------------------------------------------------------------------
// nao terminal a esquerda
//---------------------------------------------------------------------------
static int getNTermEsquerda(int pos) {
static int nterm_esquerda [20] =    {
/*-----------------------------*
 * producao   nao_term. a esq. *
 *-----------------------------*/
   /*  1 */      1,
   /*  2 */      2,
   /*  3 */      2,
   /*  4 */      3,
   /*  5 */      4,
   /*  6 */      4,
   /*  7 */      5,
   /*  8 */      5,
   /*  9 */      7,
   /* 10 */      7,
   /* 11 */      6,
   /* 12 */      6,
   /* 13 */      8,
   /* 14 */      8,
   /* 15 */      9,
   /* 16 */      9,
   /* 17 */     10,
   /* 18 */     10,
   /* 19 */     11,
   /* 20 */     11     };
return nterm_esquerda[pos];
}

//---------------------------------------------------------------------------
// Valores logicos
//---------------------------------------------------------------------------
#define TRUE   1
#define FALSE  0

//---------------------------------------------------------------------------
// Terminais que possuem atributos
//---------------------------------------------------------------------------
static int isTermAtrib(int pos) {
static int term_atrib[11] =    {
/*-------------------------------------------------------------------------*
 *      TERMINAIS COM ATRIBUTOS                                            *
 *-------------------------------------------------------------------------*
 *           'n         '      'l                            '.a           *
 *            t          (      o    '{                 't     t           *
 *            e          te_    c     te_                e     r           *
 *            r          par    a     cod                r     i           *
 *   ';'      m'   '->'    )'   l'     }'   '|'   '#'    m'    b'   '$'    *
 *   (0)    (1)   (2)    (3)   (4)    (5)   (6)   (7)   (8)   (9)  (10)    *
 *-------------------------------------------------------------------------*/
   FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE };
return term_atrib[pos];
}

//---------------------------------------------------------------------------
// Numero de filhos nao terminais de cada producao
//---------------------------------------------------------------------------
static int getNtFilhos(int pos) {
static int nt_filhos[20] = {
/*-------------------------------------------------------------------------*
 *      NUMEROS DE FILHOS NAO TERMINAIS DE CADA PRODUCAO                   *
 *-------------------------------------------------------------------------*/
   1, 2, 1, 3, 0, 0, 0, 0, 1, 0, 3, 2, 1, 1, 3, 2, 1, 1, 0, 0 };
return nt_filhos[pos];
}

//---------------------------------------------------------------------------
// Numero de producoes associadas a cada nao terminal
//---------------------------------------------------------------------------
static int getProducoesAssociadas(int pos) {
static int producoes_associadas[11] =  {
/*------------------------------------------*
 * NAO_TERM.       NUM_PROD_ASSO  PRODUCOES *
 *------------------------------------------*/
 /* Espec       */    1,          /*  1     */
 /* Lista_prod  */    2,          /*  2,  3 */
 /*  Prod       */    1,          /*  4     */
 /*  Param_opc  */    2,          /*  5,  6 */
 /*  Local_opc  */    2,          /*  7,  8 */
 /*  Codigo_opc */    2,          /*  9, 10 */
 /*  Lista_dir  */    2,          /* 11, 12 */
 /*  Parte_dir  */    2,          /* 13, 14 */
 /*  Lista_simb */    2,          /* 15, 16 */
 /*  Simb       */    2,          /* 17, 18 */
 /*  Atrib_opc  */    2           /* 19, 20 */  };
return producoes_associadas[pos];
}

};


//---------------------------------------------------------------------------
#endif
